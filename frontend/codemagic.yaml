workflows:
  ios_capacitor_release_auto:
    name: iOS Capacitor (Auto signing via ASC API)
    instance_type: mac_mini_m2
    max_build_duration: 90
    environment:
      vars:
        BUNDLE_ID: "com.orirot.givit"     # ה-Bundle ID שלך
        XCODE_PROJECT_PATH: "ios/App"
        XCODE_SCHEME: "App"
        APPLE_TEAM_ID: $APPLE_TEAM_ID     # חייב להיות 39WVDVZKGE לפי הצילום שלך
      xcode: 16.4
      node: { version: v20.12.2 }
      ios_signing:
        distribution_type: app_store
        bundle_identifier: "$BUNDLE_ID"
        app_store_connect_api_key:
          key_id: Encrypted(APP_STORE_CONNECT_API_KEY_ID)
          issuer_id: Encrypted(APP_STORE_CONNECT_ISSUER_ID)
          # חשוב: תוכן ה-.p8 הגולמי (PEM), לא base64
          private_key: Encrypted(APP_STORE_CONNECT_API_KEY_P8)
    scripts:
      - name: Install deps & sync (Capacitor)
        script: |
          npm ci
          npm run build
          npx cap sync ios
          cd ios/App && pod install && cd -

      - name: Fix bundle id (force in Info.plist)
        script: |
          echo "Setting CFBundleIdentifier to $BUNDLE_ID"
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $BUNDLE_ID" "ios/App/App/Info.plist"
          /usr/libexec/PlistBuddy -c "Print :CFBundleIdentifier" "ios/App/App/Info.plist"

      - name: Diagnostics (before archive)
        script: |
          echo "=== Team ID from env ==="; echo "$APPLE_TEAM_ID"
          echo "=== CFBundleIdentifier (Info.plist) ==="
          /usr/libexec/PlistBuddy -c "Print :CFBundleIdentifier" "ios/App/App/Info.plist" || true
          echo "=== Identities (before) ==="
          security find-identity -v -p codesigning || true
          echo "=== Profiles dir (before) ==="
          ls -la "$HOME/Library/MobileDevice/Provisioning Profiles" || true

      - name: Xcode archive (automatic signing)
        script: |
          xcodebuild \
            -workspace "$XCODE_PROJECT_PATH/App.xcworkspace" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            clean archive | xcpretty

      - name: Export IPA (automatic)
        script: |
          cat > "$CM_BUILD_DIR/ExportOptions.plist" <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>automatic</string>
            <key>destination</key><string>export</string>
            <key>uploadSymbols</key><true/>
            <key>stripSwiftSymbols</key><true/>
          </dict>
          </plist>
          PLIST

          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist "$CM_BUILD_DIR/ExportOptions.plist" \
            -exportPath "$CM_BUILD_DIR/export" \
            -allowProvisioningUpdates | xcpretty

          echo "=== Identities (after) ==="
          security find-identity -v -p codesigning || true
          echo "=== Profiles dir (after) ==="
          ls -la "$HOME/Library/MobileDevice/Provisioning Profiles" || true
          ls -la "$CM_BUILD_DIR/export"

    artifacts:
      - $CM_BUILD_DIR/export/*.ipa

    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_API_KEY_ID
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - "Internal Testers"