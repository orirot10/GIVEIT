workflows:
  ios-signed-ipa:
    name: iOS Signed IPA (Capacitor; frontend/)
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      node: 18
      xcode: latest
      cocoapods: default
      vars:
        APP_SCHEME: "App"                 # ודא שזה שם ה-Scheme
        IOS_DIR: "frontend/ios/App"       # נתיב פרויקט iOS (Capacitor)
        BUNDLE_ID: "com.orirot.givit"     # ה-Bundle ID שלך
        APPLE_TEAM_ID: "39WVDVZKGE"       # <-- שים כאן את Team ID שלך (10 תווים, אותיות/ספרות)
        DIST_PROFILE_NAME: "Distribution"  # שם ה-Provisioning Profile (App Store) בדיוק כפי שמופיע ב-Apple/Codemagic
    scripts:
      - name: Install deps (frontend)
        script: |
          cd frontend
          npm ci || npm i

      - name: Build web (auto-detect framework)
        script: |
          set -e
          cd frontend

          echo "==> Listing npm scripts:"
          npm run || true

          echo "==> Detecting framework & running build…"
          BUILD_OK=0
          WEB_OUT=""

          if [ -f vite.config.ts ] || [ -f vite.config.js ] || npm ls vite --depth=0 >/dev/null 2>&1; then
            npx vite build && BUILD_OK=1
          fi
          if [ $BUILD_OK -eq 0 ] && (npm ls react-scripts --depth=0 >/dev/null 2>&1); then
            npx react-scripts build && BUILD_OK=1
          fi
          if [ $BUILD_OK -eq 0 ] && (npm ls next --depth=0 >/dev/null 2>&1); then
            npx next build
            npx next export || true
            BUILD_OK=1
          fi
          if [ $BUILD_OK -eq 0 ] && (npx ionic -v >/dev/null 2>&1); then
            npx ionic build && BUILD_OK=1
          fi
          if [ $BUILD_OK -eq 0 ]; then
            if npm run -s build >/dev/null 2>&1; then
              npm run build && BUILD_OK=1
            fi
          fi

          if [ $BUILD_OK -eq 0 ]; then
            echo "No known build tool detected and no 'npm run build' script exists."
            cat package.json
            exit 1
          fi

          if [ -d dist ]; then WEB_OUT="dist"; fi
          if [ -d build ]; then WEB_OUT="build"; fi
          if [ -d out ];   then WEB_OUT="out";   fi

          if [ -z "$WEB_OUT" ]; then
            echo "Build finished but couldn't find output folder (dist/build/out)."
            ls -la
            exit 1
          fi

          echo "==> Build output detected at: $WEB_OUT"

          if [ -f capacitor.config.json ]; then
            node -e "const fs=require('fs');const p='capacitor.config.json';const o=JSON.parse(fs.readFileSync(p));o.webDir='$WEB_OUT';fs.writeFileSync(p, JSON.stringify(o,null,2));console.log('Updated',p,'webDir=$WEB_OUT');"
          elif ls capacitor.config.* >/dev/null 2>&1; then
            sed -i.bak "s/webDir: *['\"][^'\"]*['\"]/webDir: '$WEB_OUT'/" capacitor.config.* || true
            echo "Attempted to set webDir='$WEB_OUT' in capacitor.config.*"
          else
            echo "No capacitor.config.* found in frontend. Make sure it's there."
          fi

      - name: Ensure iOS platform exists & sync
        script: |
          cd frontend
          if [ ! -d "ios" ]; then
            npx cap add ios
          fi
          npx cap sync ios
          # חובה ב-Capacitor עם Pods:
          cd ios/App
          pod install --repo-update

      - name: Install signing certificates & provisioning profiles
        script: |
          # ודא שהעלית ב-Codemagic: AppleDistribution.p12 (עם סיסמה) וה-.mobileprovision (App Store)
          keychain add-certificates
          # הכפיית team על כל ה-targets (כולל Pods) + שימוש בפרופילים שהותקנו
          xcode-project use-profiles --team-id "$APPLE_TEAM_ID" --warn-only

      - name: Bump build number
        script: |
          cd $IOS_DIR
          NEW_BUILD_NUMBER=${CM_BUILD_ID:-1}
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $NEW_BUILD_NUMBER" "App/Info.plist" || true

      - name: Build (archive) with code signing
        script: |
          cd $IOS_DIR
          # אם אתה רוצה להיות אקספליציטי בפרופיל: PROVISIONING_PROFILE_SPECIFIER="$DIST_PROFILE_NAME"
          xcodebuild archive \
            -workspace "App.xcworkspace" \
            -scheme "$APP_SCHEME" \
            -configuration Release \
            -destination "generic/platform=iOS" \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
            CODE_SIGN_STYLE=Manual \
            PROVISIONING_PROFILE_SPECIFIER="$DIST_PROFILE_NAME" \
            CODE_SIGNING_ALLOWED=YES CODE_SIGNING_REQUIRED=YES

      - name: Export signed .ipa (App Store)
        script: |
          cd $IOS_DIR
          # ניתן למפות Bundle ID -> שם פרופיל, אם יש כמה:
          #  --export-options "provisioningProfiles[$BUNDLE_ID]=$DIST_PROFILE_NAME"
          xcode-project export-ipa \
            --archive "$CM_BUILD_DIR/App.xcarchive" \
            --export-method app-store \
            --export-options "provisioningProfiles[$BUNDLE_ID]=$DIST_PROFILE_NAME"

    artifacts:
      - build/ios/ipa/*.ipa
      - $IOS_DIR/build/Build/Products/Release-iphoneos/*.app
      - $CM_BUILD_DIR/App.xcarchive
