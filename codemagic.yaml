workflows:
  ios_capacitor_manual_tf:
    name: iOS Capacitor • Manual signing → TestFlight
    instance_type: mac_mini_m2
    max_build_duration: 90
    environment:
      vars:
        BUNDLE_ID: "com.orirot.givit"
        XCODE_PROJECT_PATH: "frontend/ios/App"
        XCODE_SCHEME: "App"
        APPLE_TEAM_ID: $APPLE_TEAM_ID
      xcode: "16.4"
      node: "20"   # ← חייב להיות מחרוזת/מספר, לא אובייקט
    scripts:
      - name: Install deps & sync
        script: |
          cd frontend
          npm ci
          npm run build
          npx cap sync ios
          cd ios/App && pod install && cd ../../..

      - name: Force bundle id (Info.plist)
        script: |
          echo "Setting CFBundleIdentifier to $BUNDLE_ID"
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $BUNDLE_ID" "frontend/ios/App/App/Info.plist"
          /usr/libexec/PlistBuddy -c "Print :CFBundleIdentifier" "frontend/ios/App/App/Info.plist"

      - name: Install signing (manual p12 + profile)
        script: |
          security create-keychain -p "" codemagic.keychain
          security default-keychain -s codemagic.keychain
          security unlock-keychain -p "" codemagic.keychain
          security set-keychain-settings -t 3600 -l codemagic.keychain

          echo "$P12_BASE64" | base64 --decode > dist.p12
          security import dist.p12 -k codemagic.keychain -P "$P12_PASSWORD" -A

          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          echo "$DIST_PROFILE_BASE64" | base64 --decode > profile.mobileprovision
          UUID=$(grep -a -o "[-A-Z0-9]\\{36\\}" profile.mobileprovision | head -n 1)
          cp profile.mobileprovision "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision"

      - name: Diagnostics (after import)
        script: |
          echo "=== Team ID ==="; echo "$APPLE_TEAM_ID"
          echo "=== CFBundleIdentifier ==="
          /usr/libexec/PlistBuddy -c "Print :CFBundleIdentifier" "frontend/ios/App/App/Info.plist" || true
          echo "=== Identities (after import) ==="
          security find-identity -v -p codesigning || true
          echo "=== Profiles dir ==="
          ls -la "$HOME/Library/MobileDevice/Provisioning Profiles" || true
          echo "Provisioning UUID: $UUID"

      - name: Xcode archive (manual signing)
        script: |
          xcodebuild \
            -workspace "$XCODE_PROJECT_PATH/App.xcworkspace" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            CODE_SIGN_STYLE=Manual \
            PROVISIONING_PROFILE_SPECIFIER="$UUID" \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            clean archive | xcpretty

      - name: Export IPA (manual signing)
        script: |
          cat > "$CM_BUILD_DIR/ExportOptions.plist" <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>manual</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>com.orirot.givit</key>
              <string>$(echo $UUID)</string>
            </dict>
          </dict>
          </plist>
          PLIST

          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist "$CM_BUILD_DIR/ExportOptions.plist" \
            -exportPath "$CM_BUILD_DIR/export" | xcpretty

          ls -la "$CM_BUILD_DIR/export"

    artifacts:
      - $CM_BUILD_DIR/export/*.ipa

    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_API_KEY_P8
        key_id: $APP_STORE_CONNECT_API_KEY_ID
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - "Internal Testers"

