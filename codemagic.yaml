workflows:
  ios-unsigned-ipa:
    name: iOS Unsigned IPA (Capacitor; frontend/)
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      node: 18
      xcode: latest
      vars:
        APP_SCHEME: "App"
        IOS_DIR: "frontend/ios/App"
    scripts:
      - name: Install deps (frontend)
        script: |
          cd frontend
          npm ci || npm i

      - name: Build web (auto-detect framework)
        script: |
          set -e
          cd frontend

          echo "==> Listing npm scripts:"
          npm run || true

          echo "==> Detecting framework & running build…"
          BUILD_OK=0
          WEB_OUT=""

          # 1) Vite
          if [ -f vite.config.ts ] || [ -f vite.config.js ] || npm ls vite --depth=0 >/dev/null 2>&1; then
            npx vite build && BUILD_OK=1
          fi

          # 2) Create React App (react-scripts)
          if [ $BUILD_OK -eq 0 ] && (npm ls react-scripts --depth=0 >/dev/null 2>&1); then
            npx react-scripts build && BUILD_OK=1
          fi

          # 3) Next.js (נייצא גם סטטי)
          if [ $BUILD_OK -eq 0 ] && (npm ls next --depth=0 >/dev/null 2>&1); then
            npx next build
            # אם יש next export קונפיג, ננסה להוציא ל-out
            npx next export || true
            BUILD_OK=1
          fi

          # 4) Ionic (Capacitor)
          if [ $BUILD_OK -eq 0 ] && (npx ionic -v >/dev/null 2>&1); then
            npx ionic build && BUILD_OK=1
          fi

          # 5) אם יש כבר סקריפט build – נריץ אותו
          if [ $BUILD_OK -eq 0 ]; then
            if npm run -s build >/dev/null 2>&1; then
              npm run build && BUILD_OK=1
            fi
          fi

          if [ $BUILD_OK -eq 0 ]; then
            echo "No known build tool detected and no 'npm run build' script exists."
            echo "Please add a build script to frontend/package.json, e.g.:"
            echo '  "scripts": { "build": "vite build" }'
            echo "Failing with logs:"
            cat package.json
            exit 1
          fi

          # מצאנו לאן נבנה
          if [ -d dist ]; then WEB_OUT="dist"; fi
          if [ -d build ]; then WEB_OUT="build"; fi
          if [ -d out ];   then WEB_OUT="out";   fi

          if [ -z "$WEB_OUT" ]; then
            echo "Build finished but couldn't find output folder (dist/build/out)."
            ls -la
            exit 1
          fi

          echo "==> Build output detected at: $WEB_OUT"

          # עדכון capacitor.config.* ל-webDir = WEB_OUT (כדי ש-cap sync יעתיק נכון)
          # תומך גם ב-capacitor.config.json וגם ב-capacitor.config.ts|js בסיסי.
          if [ -f capacitor.config.json ]; then
            node -e "const fs=require('fs');const p='capacitor.config.json';const o=JSON.parse(fs.readFileSync(p));o.webDir='$WEB_OUT';fs.writeFileSync(p, JSON.stringify(o,null,2));console.log('Updated',p,'webDir=$WEB_OUT');"
          elif [ -f capacitor.config.ts ] || [ -f capacitor.config.js ]; then
            # החלפה טקסטואלית בסיסית של webDir אם קיים
            sed -i.bak "s/webDir: *['\"][^'\"]*['\"]/webDir: '$WEB_OUT'/" capacitor.config.* || true
            echo "Attempted to set webDir='$WEB_OUT' in capacitor.config.*"
          else
            echo "No capacitor.config.* found in frontend. Make sure it's there."
          fi

      - name: Ensure iOS platform exists & sync
        script: |
          cd frontend
          if [ ! -d "ios" ]; then
            npx cap add ios
          fi
          npx cap sync ios

      - name: Build .app (disable code signing)
        script: |
          cd $IOS_DIR
          xcodebuild \
            -workspace App.xcworkspace \
            -scheme $APP_SCHEME \
            -configuration Release \
            -sdk iphoneos \
            -derivedDataPath build \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY="" \
            ONLY_ACTIVE_ARCH=NO

      - name: Package .ipa (unsigned)
        script: |
          cd $IOS_DIR
          rm -rf Payload
          mkdir -p Payload
          APP_PATH="build/Build/Products/Release-iphoneos/App.app"
          if [ ! -d "$APP_PATH" ]; then
            echo "App.app not found at $APP_PATH"
            echo "Available products tree:"
            ls -R build/Build/Products || true
            exit 1
          fi
          cp -R "$APP_PATH" Payload/
          zip -r app-unsigned.ipa Payload
          rm -rf Payload

    artifacts:
      - frontend/ios/App/app-unsigned.ipa
      - frontend/ios/App/build/Build/Products/Release-iphoneos/*.app
